/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cinema_proyect;
import Conex.Conexion;
import java.awt.Color;
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.*;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JTextPane;
import javax.swing.text.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
/**
 *
 * @author monit
 */
public class ticket extends javax.swing.JFrame {
    public static int usuario;
    Conexion cc = new Conexion();
    Connection con = cc.Conexion();
    String movies[][] = new String[100][9];
    String funciones[][] = new String[1000][4];
    String forma_pago[][] = new String[2][2];
    int suma = 0;
    String[] asientos; 
    int contador = 0;
    boolean creada = false;
    
    /**
     * Creates new form ticket
     */
    public ticket(int id_usuario) {
        initComponents();
        this.setLocationRelativeTo(null);
        usuario = id_usuario;
        text_usuario.setText("UsuarioID: "+usuario);
        
        int result = 0;
        String stmt = "select p.id_pelicula, p.reparto, p.duracion, f.formato, p.nombre, e.estado, c.clasificacion, d.nombre as director from pelicula p inner join estado e on p.id_estado = e.id_estado inner join clasificacion c on p.id_clasificacion = c.id_clasificacion inner join formato f on p.id_formato = f.id_formato inner join director d on p.id_director = d.id_director where p.id_estado = 1";
        String stmt2 = "select * from forma_pago";
        try{
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(stmt);
            while(rs.next()){
                movies[result][0] = String.valueOf(rs.getInt("id_pelicula"));
                movies[result][1] = rs.getString("nombre");
                movies[result][2] = rs.getString("formato");
                movies[result][3] = rs.getString("estado");
                movies[result][4] = rs.getString("clasificacion");
                movies[result][5] = rs.getString("reparto");
                movies[result][6] = String.valueOf(rs.getInt("duracion"));
                movies[result][7] = movies[result][1]+" ---"+movies[result][2]+"---";
                movies[result][8] = rs.getString("director");
                movies_list.addItem(movies[result][7]);
                result ++;
            }
            st = con.createStatement();
            rs = st.executeQuery(stmt2);
            int f = 0;
            while(rs.next()){
                forma_pago[f][0] = rs.getString("id_forma_pago");
                forma_pago[f][1] = rs.getString("forma");
                text_pago.addItem(forma_pago[f][1]);
                f ++;
            }
        }catch(Exception e){
            System.out.println("Error: " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        movies_list = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        text_director = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        text_formato = new javax.swing.JLabel();
        text_duracion = new javax.swing.JLabel();
        text_reparto = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        text_clasificacion = new javax.swing.JLabel();
        text_sala = new javax.swing.JLabel();
        funcion = new javax.swing.JComboBox<>();
        text_usuario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visual_asientos = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        text_asientos = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        text_3edad = new javax.swing.JSpinner();
        text_nino = new javax.swing.JSpinner();
        text_adulto = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        text_asientos_compra = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        text_total = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        text_pago = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        text_monto = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel2.setText("TICKET");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("FUNCION");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        movies_list.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        movies_list.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                movies_listItemStateChanged(evt);
            }
        });
        movies_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movies_listMouseClicked(evt);
            }
        });
        jPanel1.add(movies_list, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 320, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel4.setText("DIRECTOR");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 110, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel5.setText("INFORMACION");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 430, -1));

        text_director.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        text_director.setText("N/A      ");
        jPanel1.add(text_director, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 310, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel7.setText("DURACION");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 110, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel8.setText("REPARTO      ");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 110, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel9.setText("FORMATO      ");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 110, 20));

        text_formato.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        text_formato.setText("N/A");
        jPanel1.add(text_formato, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 310, 20));

        text_duracion.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        text_duracion.setText("N/A");
        jPanel1.add(text_duracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 310, 20));

        text_reparto.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        text_reparto.setText("N/A");
        jPanel1.add(text_reparto, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 310, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel6.setText("CLASIFIACION");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 110, 20));

        text_clasificacion.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        text_clasificacion.setText("N/A      ");
        jPanel1.add(text_clasificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 310, 20));

        text_sala.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        text_sala.setText("SALA:");
        jPanel1.add(text_sala, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 350, -1));

        funcion.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        funcion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                funcionItemStateChanged(evt);
            }
        });
        funcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                funcionMouseClicked(evt);
            }
        });
        jPanel1.add(funcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 320, 30));

        text_usuario.setText("Usuario: ");
        jPanel1.add(text_usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 150, -1));

        visual_asientos.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jScrollPane1.setViewportView(visual_asientos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 350, 220));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setText("ASIENTO");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, -1, -1));

        text_asientos.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        text_asientos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                text_asientosItemStateChanged(evt);
            }
        });
        text_asientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                text_asientosMouseClicked(evt);
            }
        });
        jPanel1.add(text_asientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 330, 140, 30));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("+");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 330, 70, 30));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setText("T. 3 EDAD");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, -1, -1));

        text_3edad.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel1.add(text_3edad, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, 80, 30));

        text_nino.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel1.add(text_nino, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, 80, 30));

        text_adulto.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel1.add(text_adulto, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 80, 30));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel14.setText("T. ADULTO");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, -1, -1));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel15.setText("PELICULA");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        text_asientos_compra.setEditable(false);
        text_asientos_compra.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel1.add(text_asientos_compra, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, 350, 30));

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton2.setText("COMPRAR");
        jButton2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jButton2ItemStateChanged(evt);
            }
        });
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 410, 220, 30));

        text_total.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        text_total.setText("TOTAL:");
        jPanel1.add(text_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 450, 210, -1));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel17.setText("T. NIÑO");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));

        text_pago.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        text_pago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                text_pagoItemStateChanged(evt);
            }
        });
        jPanel1.add(text_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, 110, 30));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel18.setText("PAGO");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, -1, -1));

        text_monto.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel1.add(text_monto, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 80, 30));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel20.setText("MONTO");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 410, -1, -1));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/return.png"))); // NOI18N
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(833, 10, 50, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void movies_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movies_listMouseClicked
        
    }//GEN-LAST:event_movies_listMouseClicked

    private void movies_listItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_movies_listItemStateChanged
        llenar_informacion();
        llenar_funciones();
    }//GEN-LAST:event_movies_listItemStateChanged

    private void funcionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_funcionItemStateChanged
        llenar_asientos();
    }//GEN-LAST:event_funcionItemStateChanged

    private void funcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funcionMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_funcionMouseClicked

    private void text_asientosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_text_asientosItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_text_asientosItemStateChanged

    private void text_asientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_text_asientosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_text_asientosMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        deshabilitar_no_entradas();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jButton2ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ItemStateChanged

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        comprar_ticket();
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void text_pagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_text_pagoItemStateChanged
        enabled_monto();
    }//GEN-LAST:event_text_pagoItemStateChanged

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        regresar();
    }//GEN-LAST:event_jButton3MouseClicked
    public void regresar(){
        String us = "select id_privilegios from usuario where id_usuario = '"+usuario+"'";
        int result = 0;
        try{
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(us);
            
            if(rs.next()){
                result = 1;
                if(result == 1){
                    int privilegios = rs.getInt("id_privilegios");
                    if(privilegios == 1){
                        admin form = new admin(usuario);
                        form.setVisible(true);
                        this.dispose();
                    }else if(privilegios == 2){
                        Ventas form = new Ventas(usuario);
                        form.setVisible(true);
                        this.dispose();
                    }else if(privilegios == 3){
                        bodega form = new bodega(usuario);
                        form.setVisible(true);
                        this.dispose();
                    }else if(privilegios == 4){
                        rrhh form = new rrhh(usuario);
                        form.setVisible(true);
                        this.dispose();
                    }
                }
            }else{
                System.out.println("Error: ");
            }
        }catch(Exception e){
            System.out.println("Error: " + e);
        }
    }
    
    
    public void vender_ticket(){
        ticket form = new ticket(usuario);
        form.setVisible(true);
        this.dispose();
    }
    
    public void comprar_ticket(){
        int id = Integer.valueOf(forma_pago[text_pago.getSelectedIndex()][0]);
        float monto = 0;
        boolean compra = false;
        int nino = Integer.valueOf(""+text_nino.getValue());
        int adulto = Integer.valueOf(""+text_adulto.getValue());
        int edad3 = Integer.valueOf(""+text_3edad.getValue());
        float vuelto = 0;
        String nit = "0000";
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        DateTimeFormatter dtf2 = DateTimeFormatter.ofPattern("HH:mm:ss");
        String fecha = (dtf.format(LocalDateTime.now()));
        String hora = (dtf2.format(LocalDateTime.now()));
        String[] precios = new String[3];
        Statement st;
        ResultSet rs;
        String stmt = "select * from tipo_boleto";
        try{
            st = con.createStatement();
            rs = st.executeQuery(stmt);
            int result = 0;
            while(rs.next()){
                precios[result] = rs.getString("precio");
                result ++;
            }
        }catch(Exception e){
            System.out.println("Error: " + e);
        }
        float total = edad3 * Float.valueOf(precios[0]) + nino * Float.valueOf(precios[1]) + adulto * Float.valueOf(precios[2]);
        
        
        if(asientos[suma-1] == null){
            System.out.println("ERROR, ASIENTOS INCOMPLETOS");
        }else{
            if(id == 1){
                if(text_monto.getText().equals("")){
                    monto = 0;
                }else{
                    monto = Float.valueOf(text_monto.getText());
                }
                if(monto >= total){
                    compra = true;
                    vuelto = monto - total;
                }else{
                    JOptionPane.showMessageDialog(null, "MONTO INSUFICIENTE");
                }
            }else if(id == 2){
                monto = total;
                compra = true;
            }
            if(compra){
                stmt = "insert into factura values(default,'"+usuario+"','"+id+"','"+nit+"','"+fecha+"','"+total+"','"+monto+"','"+vuelto+"','"+hora+"')";
                String texto_factura = "Usuario: "+usuario+"\n";
                texto_factura = texto_factura + "fecha: "+fecha+"\n";
                texto_factura = texto_factura + "hora: "+hora+"\n";
                texto_factura = texto_factura + "CANT    DESC    TOTAL\n";
                if(nino > 0){
                    texto_factura = texto_factura + nino +"     Ticket nino Q"+nino * Float.valueOf(precios[1])+"\n";
                }
                if(adulto > 0){
                    texto_factura = texto_factura + adulto +"     Ticket adul Q"+adulto * Float.valueOf(precios[2])+"\n";
                }
                if(edad3 > 0){
                    texto_factura = texto_factura + edad3 +"     Ticket edad3 Q"+edad3 * Float.valueOf(precios[0])+"\n";
                }
                texto_factura = texto_factura + "total: Q"+total+"\n";
                texto_factura = texto_factura + "pago: Q"+monto+"\n";
                texto_factura = texto_factura + "vuelto: Q"+vuelto+"\n";
                try{
                    st = con.createStatement();
                    st.executeUpdate(stmt);
                }catch(Exception e){
                    System.out.println("Error: " + e);
                }
                
                String consulta = "select MAX(id_factura) as fact from factura";
                String id_factura = "";
                try{
                    st = con.createStatement();
                    rs = st.executeQuery(consulta);
                    if(rs.next()){
                        id_factura = rs.getString("fact");
                    }
                }catch(Exception e){
                    System.out.println("Error: " + e);
                }
                for(int i = 0; i < suma; i++){
                    consulta = "select a.id_asientos from asientos a inner join funcion f on a.id_sala = f.id_sala where no_asiento = '"+asientos[i]+"' and f.id_funcion ='"+funciones[funcion.getSelectedIndex()][0]+"'";
                    try{
                        st = con.createStatement();
                        rs = st.executeQuery(consulta);
                        if(rs.next()){
                            asientos[i] = rs.getString("id_asientos");
                        }
                    }catch(Exception e){
                        System.out.println("Error: " + e);
                    }
                    
                }
                
                
                for(int i = 0; i < suma ; i++){
                    if(nino > 0){
                        consulta = "insert into ticket values(default,'2','"+funciones[funcion.getSelectedIndex()][0]+"','"+asientos[i]+"','"+id_factura+"','"+usuario+"','"+fecha+"')";
                        nino--;
                    }else if(adulto > 0){
                        consulta = "insert into ticket values(default,'3','"+funciones[funcion.getSelectedIndex()][0]+"','"+asientos[i]+"','"+id_factura+"','"+usuario+"','"+fecha+"')";
                        adulto--;
                    }else if(edad3 > 0){
                        consulta = "insert into ticket values(default,'1','"+funciones[funcion.getSelectedIndex()][0]+"','"+asientos[i]+"','"+id_factura+"','"+usuario+"','"+fecha+"')";
                        edad3--;
                    }else{
                        consulta = "";
                    }
                    String insert = "insert into detalle_funcion values(default, '"+funciones[funcion.getSelectedIndex()][0]+"', '"+asientos[i]+"', '0')";
                    try{
                        st = con.createStatement();
                        st.executeUpdate(consulta);
                        st =con.createStatement();
                        st.executeUpdate(insert);
                        JOptionPane.showMessageDialog(null,"FACTURA: "+id_factura+"\n"+texto_factura);
                        vender_ticket();
                    }catch(Exception e){
                        System.out.println("Error: " + e);
                    }
                }
                
                
                
                
            }
        }
    }
    public void enabled_monto(){
        int id = Integer.valueOf(forma_pago[text_pago.getSelectedIndex()][0]);
        if(id == 1){
            text_monto.setEnabled(true);
        }else{
            text_monto.setText("");
            text_monto.setEnabled(false);
        }
        
    }
    public void deshabilitar_no_entradas(){
        int a = Integer.parseInt(""+text_adulto.getValue());
        int b = Integer.parseInt(""+text_nino.getValue());
        int c = Integer.parseInt(""+text_3edad.getValue());
        suma = a + b + c; 
        if(a<0|| b<0 || c<0){
            
        }else{
            if ((suma>0) && !creada){
                text_adulto.setEnabled(false);
                text_nino.setEnabled(false);
                text_3edad.setEnabled(false);
                asientos = new String[suma];
                creada = true;
            }
        }
        if(creada){
            agregar_asiento();
        }
        int nino = Integer.valueOf(""+text_nino.getValue());
        int adulto = Integer.valueOf(""+text_adulto.getValue());
        int edad3 = Integer.valueOf(""+text_3edad.getValue());
        String[] precios = new String[3];
        Statement st;
        ResultSet rs;
        String stmt = "select * from tipo_boleto";
        try{
            st = con.createStatement();
            rs = st.executeQuery(stmt);
            int result = 0;
            while(rs.next()){
                precios[result] = rs.getString("precio");
                result ++;
            }
        }catch(Exception e){
            System.out.println("Error: " + e);
        }
        float total = edad3 * Float.valueOf(precios[0]) + nino * Float.valueOf(precios[1]) + adulto * Float.valueOf(precios[2]);
        text_total.setText("TOTAL: "+total);
    }
    
    public void agregar_asiento(){
        boolean existe = false;
        if(contador>=suma){
            contador = 0;
        }
        String as = text_asientos.getItemAt(text_asientos.getSelectedIndex());
        for(int i = 0; i < suma ; i++){
            if(as.equals(asientos[i])){
                existe = true;
            }
        }
        if(!existe){
            asientos[contador] = as;
            contador++;
            String texto = "";
            for(int i =0; i < suma; i++){
                texto = texto + asientos[i] + ", ";
            }
            text_asientos_compra.setEditable(true);
            text_asientos_compra.setText(texto);
            text_asientos_compra.setEditable(false);
        }
    }
    
    public void llenar_asientos(){
        int numero_funcion = funcion.getSelectedIndex();
        if(numero_funcion >= 0){
            String id_pelicula = movies[movies_list.getSelectedIndex()][0];
            String id_funcion = funciones[numero_funcion][0];
            String id_sala = funciones[numero_funcion][3];
            ArrayList asientos = new ArrayList();
            ArrayList asientos_nd = new ArrayList();
            ArrayList asientos_eu = new ArrayList();
            text_sala.setText("SALA: "+id_sala);
            int sala_filas = 0;
            int sala_columnas = 0;
            String stmt = "select * from sala where id_sala = '"+id_sala+"'";
            String stmt2 = "select * from asientos Where id_sala ='"+id_sala+"'";
            String stmt3 = "select a.no_asiento from detalle_funcion d inner join asientos a on a.id_asientos = d.id_asientos where d.id_funcion = '"+id_funcion+"' and d.disponiblidad = '0';";
            text_asientos.removeAllItems();
            Statement st;
            ResultSet rs;
            try{
                visual_asientos.setEditable(true);
                visual_asientos.setText("");
                st = con.createStatement();
                rs = st.executeQuery(stmt);
                if(rs.next()){
                    sala_filas = rs.getInt("filas_asientos");
                    sala_columnas = rs.getInt("columnas_asientos");
                }
                st = con.createStatement();
                rs = st.executeQuery(stmt2);
                while(rs.next()){
                    asientos.add(rs.getString("no_asiento"));
                    int disp = rs.getInt("disponibilidad_uso");
                    if(disp == 0){
                        asientos_nd.add(rs.getString("no_asiento"));
                    }
                }
                rs = st.executeQuery(stmt3);
                while(rs.next()){
                        asientos_eu.add(rs.getString("no_asiento"));
                }
                Iterator it = asientos.iterator();
                int i = 1;
                while(it.hasNext()){
                    Color color = Color.BLUE;
                    String no_as = String.valueOf(it.next());
                    Iterator nd = asientos_nd.iterator();
                    boolean cambio = false;
                    while(nd.hasNext()){
                        String nex = String.valueOf(nd.next());
                        if(no_as.equals(nex) && !cambio){
                            color = Color.RED;
                            cambio = true;
                        }else if (!cambio){
                            color = Color.BLUE;
                        }
                    }
                    Iterator eu = asientos_eu.iterator();
                    while(eu.hasNext()){
                        String enu = String.valueOf(eu.next());
                        if(no_as.equals(enu) && !cambio){
                            color = Color.BLACK;
                            cambio = true;
                        }else if (!cambio){
                            color = Color.BLUE;
                        }
                    }
                    String as = "|"+no_as+"|";
                    appendToPane(visual_asientos,as,color);
                    if((i % sala_columnas) == 0){
                        appendToPane(visual_asientos,"\n",Color.BLACK);
                    }
                    if(color == Color.BLUE){
                        text_asientos.addItem(no_as);
                    }
                    i++;
                    //appendToPane(visual_asientos,it.next()+"|",Color.BLUE);
                }
                for(int c = 0; c < sala_columnas;c++){
                    appendToPane(visual_asientos,"----",Color.GREEN);
                }
                appendToPane(visual_asientos,"\n-VERDE -> PANTALLA    \n",Color.GREEN);
                appendToPane(visual_asientos,"-AZUL  -> DISPONIBLE    \n",Color.BLUE);
                appendToPane(visual_asientos,"-ROJO  -> DESHABILITADO \n",Color.RED);
                appendToPane(visual_asientos,"-NEGRO -> OCUPADO       \n",Color.BLACK);
            }catch(Exception e){
                System.out.println("Error: " + e);
            }
            visual_asientos.setEditable(false);
        }
        
    }
       
    public void llenar_informacion(){
        int id = -1;
        for(int i = 0; i < movies.length; i++){
            if(movies_list.getSelectedItem() == movies[i][7]){
                id = i;
            }
        }
        if(id >= 0){
            text_formato.setText(movies[id][2]);
            text_duracion.setText(movies[id][6]+" minutos");
            text_reparto.setText(movies[id][5]);
            text_director.setText(movies[id][8]);
            text_clasificacion.setText(movies[id][4]);
        }else{
            text_formato.setText("");
            text_duracion.setText("");
            text_reparto.setText("");
            text_director.setText("");
            text_clasificacion.setText("");
        }

    }
    
    public void llenar_funciones(){
        String id_pelicula = movies[movies_list.getSelectedIndex()][0];
        String stmt = "select * from funcion where id_pelicula = '"+id_pelicula+"'";
        funciones = new String[1000][4];
        funcion.removeAllItems();
        Statement st;
        ResultSet rs;
        int result = 0;
        try{
            st = con.createStatement();
            rs = st.executeQuery(stmt);
            while(rs.next()){
                funciones[result][0] = String.valueOf(rs.getInt("id_funcion"));
                funciones[result][1] = rs.getString("fecha");
                funciones[result][2] = rs.getString("hora_inicio");
                funciones[result][3] = rs.getString("id_sala");
                funcion.addItem("FECHA: "+funciones[result][1]+" HORA: "+funciones[result][2]);
                result ++;
            }
            
        }catch(Exception e){
            System.out.println("Error: " + e);
        }
    }
    private void appendToPane(JTextPane tp, String msg, Color c)
    {
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);

        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Lucida Console");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_JUSTIFIED);

        int len = tp.getDocument().getLength();
        tp.setCaretPosition(len);
        tp.setCharacterAttributes(aset, false);
        tp.replaceSelection(msg);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ticket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ticket(usuario).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> funcion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> movies_list;
    private javax.swing.JSpinner text_3edad;
    private javax.swing.JSpinner text_adulto;
    private javax.swing.JComboBox<String> text_asientos;
    private javax.swing.JTextField text_asientos_compra;
    private javax.swing.JLabel text_clasificacion;
    private javax.swing.JLabel text_director;
    private javax.swing.JLabel text_duracion;
    private javax.swing.JLabel text_formato;
    private javax.swing.JTextField text_monto;
    private javax.swing.JSpinner text_nino;
    private javax.swing.JComboBox<String> text_pago;
    private javax.swing.JLabel text_reparto;
    private javax.swing.JLabel text_sala;
    private javax.swing.JLabel text_total;
    private javax.swing.JLabel text_usuario;
    private javax.swing.JTextPane visual_asientos;
    // End of variables declaration//GEN-END:variables
}
